name: XGrammar Benchmark
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  run_benchmark:
    name: Run XGrammar Benchmark
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Build xgrammar from source
        run: |
          echo "set(XGRAMMAR_BUILD_CXX_TESTS ON)" >> cmake/config.cmake
          python -m pip install --upgrade pip
          pip install -e .

      - name: Install dependencies
        run: |
          pip install torch transformers datasets tqdm requests

      - name: Run benchmark
        id: benchmark
        run: |
          python examples/benchmark/cibench_grammar_compile_mask_gen.py --num_iters 3 --num_warmup 3 --datasets all | tee benchmark_output.txt

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmark_output.txt

      - name: Post benchmark results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const benchmarkOutput = fs.readFileSync('benchmark_output.txt', 'utf8');

            // Extract the results section
            const resultsSection = benchmarkOutput.split('===== XGrammar Benchmark Results =====')[1] || benchmarkOutput;

            const comment = `## XGrammar Benchmark Results

            \`\`\`
            ${resultsSection.trim()}
            \`\`\`

            [Full Results](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
